# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 1998,1999,2000,2001,2002,2003,2004 Free Software Foundation, Inc.
#
# This file is part of Libgcrypt.
#
# Libgcrypt is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# Libgcrypt is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/libgcrypt
pkglibdir = $(libdir)/libgcrypt
pkgincludedir = $(includedir)/libgcrypt
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = x86_64-unknown-linux-gnu
ACLOCAL = ${SHELL} /g/g19/liu50/workspace/launchmon-dev/tools/libgcrypt/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /g/g19/liu50/workspace/launchmon-dev/tools/libgcrypt/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /g/g19/liu50/workspace/launchmon-dev/tools/libgcrypt/missing --run autoconf
AUTOHEADER = ${SHELL} /g/g19/liu50/workspace/launchmon-dev/tools/libgcrypt/missing --run autoheader
AUTOMAKE = ${SHELL} /g/g19/liu50/workspace/launchmon-dev/tools/libgcrypt/missing --run automake-1.7
AWK = gawk
CC = gcc
CCAS = $(CC)
CCASFLAGS = $(CFLAGS)
CCDEPMODE = depmode=gcc3
CFLAGS = -g  -Wall
CPP = gcc -E
CPPFLAGS = 
CROSS_COMPILING_FALSE = 
CROSS_COMPILING_TRUE = #
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
GCRYPT_CIPHERS =  arcfour.lo blowfish.lo cast5.lo des.lo rijndael.lo twofish.lo serpent.lo rfc2268.lo
GCRYPT_DIGESTS =  crc.lo md4.lo md5.lo sha256.lo sha512.lo tiger.lo rmd160.lo sha1.lo
GCRYPT_PUBKEY_CIPHERS =  dsa.lo rsa.lo elgamal.lo
GCRYPT_RANDOM =  rndlinux.lo
GPG_ERROR_CFLAGS = -I/g/g19/liu50/bin/cab/include -I/g/g19/liu50/workspace/launchmon-dev/tools/libgpg-error/src
GPG_ERROR_CONFIG = /g/g19/liu50/workspace/launchmon-dev/tools/libgpg-error/src/gpg-error-config
GPG_ERROR_LIBS = -L/g/g19/liu50/bin/cab/lib -L/g/g19/liu50/workspace/launchmon-dev/tools/libgpg-error/src -lgpg-error
HAVE_LD_VERSION_SCRIPT_FALSE = #
HAVE_LD_VERSION_SCRIPT_TRUE = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBGCRYPT_CIPHERS = arcfour blowfish cast5 des aes twofish serpent rfc2268
LIBGCRYPT_CONFIG_API_VERSION = 1
LIBGCRYPT_CONFIG_CFLAGS = 
LIBGCRYPT_CONFIG_LIBS = -lgcrypt
LIBGCRYPT_DIGESTS = crc md4 md5 rmd160 sha1 sha256 sha512 tiger
LIBGCRYPT_LT_AGE = 1
LIBGCRYPT_LT_CURRENT = 12
LIBGCRYPT_LT_REVISION = 1
LIBGCRYPT_PUBKEY_CIPHERS = dsa elgamal rsa
LIBGCRYPT_THREAD_MODULES = 
LIBOBJS = 
LIBS = -lnsl  -lnsl
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /g/g19/liu50/workspace/launchmon-dev/tools/libgcrypt/missing --run makeinfo
MPI_MOD_LIST_LO =  mpih-add1.lo mpih-sub1.lo mpih-mul1.lo mpih-mul2.lo mpih-mul3.lo mpih-lshift.lo mpih-rshift.lo
MPI_MOD_LIST_O =  mpih-add1.o mpih-sub1.o mpih-mul1.o mpih-mul2.o mpih-mul3.o mpih-lshift.o mpih-rshift.o
MPI_SFLAGS = 
OBJEXT = o
PACKAGE = libgcrypt
PACKAGE_BUGREPORT = bug-libgcrypt@gnupg.org
PACKAGE_NAME = libgcrypt
PACKAGE_STRING = libgcrypt 1.2.0
PACKAGE_TARNAME = libgcrypt
PACKAGE_VERSION = 1.2.0
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.2.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /g/g19/liu50/workspace/launchmon-dev/tools/libgcrypt/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /g/g19/liu50/bin/cab
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown

EXTRA_DIST = Manifest libgcrypt-config.in libgcrypt.m4 libgcrypt.vers
bin_SCRIPTS = libgcrypt-config
m4datadir = $(datadir)/aclocal
m4data_DATA = libgcrypt.m4
include_HEADERS = gcrypt.h gcrypt-module.h

lib_LTLIBRARIES = libgcrypt.la

libgcrypt_version_script_cmd = -Wl,--version-script=$(srcdir)/libgcrypt.vers
#libgcrypt_version_script_cmd = 

libgcrypt_la_CFLAGS = -I/g/g19/liu50/bin/cab/include -I/g/g19/liu50/workspace/launchmon-dev/tools/libgpg-error/src
libgcrypt_la_SOURCES = g10lib.h types.h cipher.h \
	misc.c global.c sexp.c \
	stdmem.c stdmem.h secmem.c secmem.h \
	mpi.h missing-string.c module.c \
	ath.h ath.c


libgcrypt_la_LDFLAGS = $(libgcrypt_version_script_cmd) -version-info \
	12:1:1

libgcrypt_la_DEPENDENCIES = ../cipher/libcipher.la ../mpi/libmpi.la \
	$(srcdir)/libgcrypt.vers

libgcrypt_la_LIBADD = ../cipher/libcipher.la ../mpi/libmpi.la \
	 -L/g/g19/liu50/bin/cab/lib -L/g/g19/liu50/workspace/launchmon-dev/tools/libgpg-error/src -lgpg-error

subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libgcrypt-config
LTLIBRARIES = $(lib_LTLIBRARIES)

am_libgcrypt_la_OBJECTS = libgcrypt_la-misc.lo libgcrypt_la-global.lo \
	libgcrypt_la-sexp.lo libgcrypt_la-stdmem.lo \
	libgcrypt_la-secmem.lo libgcrypt_la-missing-string.lo \
	libgcrypt_la-module.lo libgcrypt_la-ath.lo
libgcrypt_la_OBJECTS = $(am_libgcrypt_la_OBJECTS)
SCRIPTS = $(bin_SCRIPTS)


DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/libgcrypt_la-ath.Plo \
	./$(DEPDIR)/libgcrypt_la-global.Plo \
	./$(DEPDIR)/libgcrypt_la-misc.Plo \
	./$(DEPDIR)/libgcrypt_la-missing-string.Plo \
	./$(DEPDIR)/libgcrypt_la-module.Plo \
	./$(DEPDIR)/libgcrypt_la-secmem.Plo \
	./$(DEPDIR)/libgcrypt_la-sexp.Plo \
	./$(DEPDIR)/libgcrypt_la-stdmem.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libgcrypt_la_SOURCES)
DATA = $(m4data_DATA)

HEADERS = $(include_HEADERS)

DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.in ChangeLog \
	Makefile.am libgcrypt-config.in
SOURCES = $(libgcrypt_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libgcrypt-config: $(top_builddir)/config.status libgcrypt-config.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgcrypt.la: $(libgcrypt_la_OBJECTS) $(libgcrypt_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libgcrypt_la_LDFLAGS) $(libgcrypt_la_OBJECTS) $(libgcrypt_la_LIBADD) $(LIBS)
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(bindir)/$$f"; \
	    $(binSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libgcrypt_la-ath.Plo
include ./$(DEPDIR)/libgcrypt_la-global.Plo
include ./$(DEPDIR)/libgcrypt_la-misc.Plo
include ./$(DEPDIR)/libgcrypt_la-missing-string.Plo
include ./$(DEPDIR)/libgcrypt_la-module.Plo
include ./$(DEPDIR)/libgcrypt_la-secmem.Plo
include ./$(DEPDIR)/libgcrypt_la-sexp.Plo
include ./$(DEPDIR)/libgcrypt_la-stdmem.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

libgcrypt_la-misc.o: misc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-misc.o -MD -MP -MF "$(DEPDIR)/libgcrypt_la-misc.Tpo" \
	  -c -o libgcrypt_la-misc.o `test -f 'misc.c' || echo '$(srcdir)/'`misc.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-misc.Tpo" "$(DEPDIR)/libgcrypt_la-misc.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-misc.Tpo"; exit 1; \
	fi
#	source='misc.c' object='libgcrypt_la-misc.o' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-misc.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-misc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-misc.o `test -f 'misc.c' || echo '$(srcdir)/'`misc.c

libgcrypt_la-misc.obj: misc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-misc.obj -MD -MP -MF "$(DEPDIR)/libgcrypt_la-misc.Tpo" \
	  -c -o libgcrypt_la-misc.obj `if test -f 'misc.c'; then $(CYGPATH_W) 'misc.c'; else $(CYGPATH_W) '$(srcdir)/misc.c'; fi`; \
	then mv -f "$(DEPDIR)/libgcrypt_la-misc.Tpo" "$(DEPDIR)/libgcrypt_la-misc.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-misc.Tpo"; exit 1; \
	fi
#	source='misc.c' object='libgcrypt_la-misc.obj' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-misc.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-misc.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-misc.obj `if test -f 'misc.c'; then $(CYGPATH_W) 'misc.c'; else $(CYGPATH_W) '$(srcdir)/misc.c'; fi`

libgcrypt_la-misc.lo: misc.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-misc.lo -MD -MP -MF "$(DEPDIR)/libgcrypt_la-misc.Tpo" \
	  -c -o libgcrypt_la-misc.lo `test -f 'misc.c' || echo '$(srcdir)/'`misc.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-misc.Tpo" "$(DEPDIR)/libgcrypt_la-misc.Plo"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-misc.Tpo"; exit 1; \
	fi
#	source='misc.c' object='libgcrypt_la-misc.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgcrypt_la-misc.Plo' tmpdepfile='$(DEPDIR)/libgcrypt_la-misc.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-misc.lo `test -f 'misc.c' || echo '$(srcdir)/'`misc.c

libgcrypt_la-global.o: global.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-global.o -MD -MP -MF "$(DEPDIR)/libgcrypt_la-global.Tpo" \
	  -c -o libgcrypt_la-global.o `test -f 'global.c' || echo '$(srcdir)/'`global.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-global.Tpo" "$(DEPDIR)/libgcrypt_la-global.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-global.Tpo"; exit 1; \
	fi
#	source='global.c' object='libgcrypt_la-global.o' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-global.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-global.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-global.o `test -f 'global.c' || echo '$(srcdir)/'`global.c

libgcrypt_la-global.obj: global.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-global.obj -MD -MP -MF "$(DEPDIR)/libgcrypt_la-global.Tpo" \
	  -c -o libgcrypt_la-global.obj `if test -f 'global.c'; then $(CYGPATH_W) 'global.c'; else $(CYGPATH_W) '$(srcdir)/global.c'; fi`; \
	then mv -f "$(DEPDIR)/libgcrypt_la-global.Tpo" "$(DEPDIR)/libgcrypt_la-global.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-global.Tpo"; exit 1; \
	fi
#	source='global.c' object='libgcrypt_la-global.obj' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-global.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-global.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-global.obj `if test -f 'global.c'; then $(CYGPATH_W) 'global.c'; else $(CYGPATH_W) '$(srcdir)/global.c'; fi`

libgcrypt_la-global.lo: global.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-global.lo -MD -MP -MF "$(DEPDIR)/libgcrypt_la-global.Tpo" \
	  -c -o libgcrypt_la-global.lo `test -f 'global.c' || echo '$(srcdir)/'`global.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-global.Tpo" "$(DEPDIR)/libgcrypt_la-global.Plo"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-global.Tpo"; exit 1; \
	fi
#	source='global.c' object='libgcrypt_la-global.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgcrypt_la-global.Plo' tmpdepfile='$(DEPDIR)/libgcrypt_la-global.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-global.lo `test -f 'global.c' || echo '$(srcdir)/'`global.c

libgcrypt_la-sexp.o: sexp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-sexp.o -MD -MP -MF "$(DEPDIR)/libgcrypt_la-sexp.Tpo" \
	  -c -o libgcrypt_la-sexp.o `test -f 'sexp.c' || echo '$(srcdir)/'`sexp.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-sexp.Tpo" "$(DEPDIR)/libgcrypt_la-sexp.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-sexp.Tpo"; exit 1; \
	fi
#	source='sexp.c' object='libgcrypt_la-sexp.o' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-sexp.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-sexp.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-sexp.o `test -f 'sexp.c' || echo '$(srcdir)/'`sexp.c

libgcrypt_la-sexp.obj: sexp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-sexp.obj -MD -MP -MF "$(DEPDIR)/libgcrypt_la-sexp.Tpo" \
	  -c -o libgcrypt_la-sexp.obj `if test -f 'sexp.c'; then $(CYGPATH_W) 'sexp.c'; else $(CYGPATH_W) '$(srcdir)/sexp.c'; fi`; \
	then mv -f "$(DEPDIR)/libgcrypt_la-sexp.Tpo" "$(DEPDIR)/libgcrypt_la-sexp.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-sexp.Tpo"; exit 1; \
	fi
#	source='sexp.c' object='libgcrypt_la-sexp.obj' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-sexp.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-sexp.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-sexp.obj `if test -f 'sexp.c'; then $(CYGPATH_W) 'sexp.c'; else $(CYGPATH_W) '$(srcdir)/sexp.c'; fi`

libgcrypt_la-sexp.lo: sexp.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-sexp.lo -MD -MP -MF "$(DEPDIR)/libgcrypt_la-sexp.Tpo" \
	  -c -o libgcrypt_la-sexp.lo `test -f 'sexp.c' || echo '$(srcdir)/'`sexp.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-sexp.Tpo" "$(DEPDIR)/libgcrypt_la-sexp.Plo"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-sexp.Tpo"; exit 1; \
	fi
#	source='sexp.c' object='libgcrypt_la-sexp.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgcrypt_la-sexp.Plo' tmpdepfile='$(DEPDIR)/libgcrypt_la-sexp.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-sexp.lo `test -f 'sexp.c' || echo '$(srcdir)/'`sexp.c

libgcrypt_la-stdmem.o: stdmem.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-stdmem.o -MD -MP -MF "$(DEPDIR)/libgcrypt_la-stdmem.Tpo" \
	  -c -o libgcrypt_la-stdmem.o `test -f 'stdmem.c' || echo '$(srcdir)/'`stdmem.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-stdmem.Tpo" "$(DEPDIR)/libgcrypt_la-stdmem.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-stdmem.Tpo"; exit 1; \
	fi
#	source='stdmem.c' object='libgcrypt_la-stdmem.o' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-stdmem.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-stdmem.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-stdmem.o `test -f 'stdmem.c' || echo '$(srcdir)/'`stdmem.c

libgcrypt_la-stdmem.obj: stdmem.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-stdmem.obj -MD -MP -MF "$(DEPDIR)/libgcrypt_la-stdmem.Tpo" \
	  -c -o libgcrypt_la-stdmem.obj `if test -f 'stdmem.c'; then $(CYGPATH_W) 'stdmem.c'; else $(CYGPATH_W) '$(srcdir)/stdmem.c'; fi`; \
	then mv -f "$(DEPDIR)/libgcrypt_la-stdmem.Tpo" "$(DEPDIR)/libgcrypt_la-stdmem.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-stdmem.Tpo"; exit 1; \
	fi
#	source='stdmem.c' object='libgcrypt_la-stdmem.obj' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-stdmem.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-stdmem.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-stdmem.obj `if test -f 'stdmem.c'; then $(CYGPATH_W) 'stdmem.c'; else $(CYGPATH_W) '$(srcdir)/stdmem.c'; fi`

libgcrypt_la-stdmem.lo: stdmem.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-stdmem.lo -MD -MP -MF "$(DEPDIR)/libgcrypt_la-stdmem.Tpo" \
	  -c -o libgcrypt_la-stdmem.lo `test -f 'stdmem.c' || echo '$(srcdir)/'`stdmem.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-stdmem.Tpo" "$(DEPDIR)/libgcrypt_la-stdmem.Plo"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-stdmem.Tpo"; exit 1; \
	fi
#	source='stdmem.c' object='libgcrypt_la-stdmem.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgcrypt_la-stdmem.Plo' tmpdepfile='$(DEPDIR)/libgcrypt_la-stdmem.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-stdmem.lo `test -f 'stdmem.c' || echo '$(srcdir)/'`stdmem.c

libgcrypt_la-secmem.o: secmem.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-secmem.o -MD -MP -MF "$(DEPDIR)/libgcrypt_la-secmem.Tpo" \
	  -c -o libgcrypt_la-secmem.o `test -f 'secmem.c' || echo '$(srcdir)/'`secmem.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-secmem.Tpo" "$(DEPDIR)/libgcrypt_la-secmem.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-secmem.Tpo"; exit 1; \
	fi
#	source='secmem.c' object='libgcrypt_la-secmem.o' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-secmem.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-secmem.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-secmem.o `test -f 'secmem.c' || echo '$(srcdir)/'`secmem.c

libgcrypt_la-secmem.obj: secmem.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-secmem.obj -MD -MP -MF "$(DEPDIR)/libgcrypt_la-secmem.Tpo" \
	  -c -o libgcrypt_la-secmem.obj `if test -f 'secmem.c'; then $(CYGPATH_W) 'secmem.c'; else $(CYGPATH_W) '$(srcdir)/secmem.c'; fi`; \
	then mv -f "$(DEPDIR)/libgcrypt_la-secmem.Tpo" "$(DEPDIR)/libgcrypt_la-secmem.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-secmem.Tpo"; exit 1; \
	fi
#	source='secmem.c' object='libgcrypt_la-secmem.obj' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-secmem.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-secmem.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-secmem.obj `if test -f 'secmem.c'; then $(CYGPATH_W) 'secmem.c'; else $(CYGPATH_W) '$(srcdir)/secmem.c'; fi`

libgcrypt_la-secmem.lo: secmem.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-secmem.lo -MD -MP -MF "$(DEPDIR)/libgcrypt_la-secmem.Tpo" \
	  -c -o libgcrypt_la-secmem.lo `test -f 'secmem.c' || echo '$(srcdir)/'`secmem.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-secmem.Tpo" "$(DEPDIR)/libgcrypt_la-secmem.Plo"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-secmem.Tpo"; exit 1; \
	fi
#	source='secmem.c' object='libgcrypt_la-secmem.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgcrypt_la-secmem.Plo' tmpdepfile='$(DEPDIR)/libgcrypt_la-secmem.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-secmem.lo `test -f 'secmem.c' || echo '$(srcdir)/'`secmem.c

libgcrypt_la-missing-string.o: missing-string.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-missing-string.o -MD -MP -MF "$(DEPDIR)/libgcrypt_la-missing-string.Tpo" \
	  -c -o libgcrypt_la-missing-string.o `test -f 'missing-string.c' || echo '$(srcdir)/'`missing-string.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-missing-string.Tpo" "$(DEPDIR)/libgcrypt_la-missing-string.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-missing-string.Tpo"; exit 1; \
	fi
#	source='missing-string.c' object='libgcrypt_la-missing-string.o' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-missing-string.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-missing-string.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-missing-string.o `test -f 'missing-string.c' || echo '$(srcdir)/'`missing-string.c

libgcrypt_la-missing-string.obj: missing-string.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-missing-string.obj -MD -MP -MF "$(DEPDIR)/libgcrypt_la-missing-string.Tpo" \
	  -c -o libgcrypt_la-missing-string.obj `if test -f 'missing-string.c'; then $(CYGPATH_W) 'missing-string.c'; else $(CYGPATH_W) '$(srcdir)/missing-string.c'; fi`; \
	then mv -f "$(DEPDIR)/libgcrypt_la-missing-string.Tpo" "$(DEPDIR)/libgcrypt_la-missing-string.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-missing-string.Tpo"; exit 1; \
	fi
#	source='missing-string.c' object='libgcrypt_la-missing-string.obj' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-missing-string.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-missing-string.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-missing-string.obj `if test -f 'missing-string.c'; then $(CYGPATH_W) 'missing-string.c'; else $(CYGPATH_W) '$(srcdir)/missing-string.c'; fi`

libgcrypt_la-missing-string.lo: missing-string.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-missing-string.lo -MD -MP -MF "$(DEPDIR)/libgcrypt_la-missing-string.Tpo" \
	  -c -o libgcrypt_la-missing-string.lo `test -f 'missing-string.c' || echo '$(srcdir)/'`missing-string.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-missing-string.Tpo" "$(DEPDIR)/libgcrypt_la-missing-string.Plo"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-missing-string.Tpo"; exit 1; \
	fi
#	source='missing-string.c' object='libgcrypt_la-missing-string.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgcrypt_la-missing-string.Plo' tmpdepfile='$(DEPDIR)/libgcrypt_la-missing-string.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-missing-string.lo `test -f 'missing-string.c' || echo '$(srcdir)/'`missing-string.c

libgcrypt_la-module.o: module.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-module.o -MD -MP -MF "$(DEPDIR)/libgcrypt_la-module.Tpo" \
	  -c -o libgcrypt_la-module.o `test -f 'module.c' || echo '$(srcdir)/'`module.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-module.Tpo" "$(DEPDIR)/libgcrypt_la-module.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-module.Tpo"; exit 1; \
	fi
#	source='module.c' object='libgcrypt_la-module.o' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-module.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-module.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-module.o `test -f 'module.c' || echo '$(srcdir)/'`module.c

libgcrypt_la-module.obj: module.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-module.obj -MD -MP -MF "$(DEPDIR)/libgcrypt_la-module.Tpo" \
	  -c -o libgcrypt_la-module.obj `if test -f 'module.c'; then $(CYGPATH_W) 'module.c'; else $(CYGPATH_W) '$(srcdir)/module.c'; fi`; \
	then mv -f "$(DEPDIR)/libgcrypt_la-module.Tpo" "$(DEPDIR)/libgcrypt_la-module.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-module.Tpo"; exit 1; \
	fi
#	source='module.c' object='libgcrypt_la-module.obj' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-module.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-module.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-module.obj `if test -f 'module.c'; then $(CYGPATH_W) 'module.c'; else $(CYGPATH_W) '$(srcdir)/module.c'; fi`

libgcrypt_la-module.lo: module.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-module.lo -MD -MP -MF "$(DEPDIR)/libgcrypt_la-module.Tpo" \
	  -c -o libgcrypt_la-module.lo `test -f 'module.c' || echo '$(srcdir)/'`module.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-module.Tpo" "$(DEPDIR)/libgcrypt_la-module.Plo"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-module.Tpo"; exit 1; \
	fi
#	source='module.c' object='libgcrypt_la-module.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgcrypt_la-module.Plo' tmpdepfile='$(DEPDIR)/libgcrypt_la-module.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-module.lo `test -f 'module.c' || echo '$(srcdir)/'`module.c

libgcrypt_la-ath.o: ath.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-ath.o -MD -MP -MF "$(DEPDIR)/libgcrypt_la-ath.Tpo" \
	  -c -o libgcrypt_la-ath.o `test -f 'ath.c' || echo '$(srcdir)/'`ath.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-ath.Tpo" "$(DEPDIR)/libgcrypt_la-ath.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-ath.Tpo"; exit 1; \
	fi
#	source='ath.c' object='libgcrypt_la-ath.o' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-ath.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-ath.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-ath.o `test -f 'ath.c' || echo '$(srcdir)/'`ath.c

libgcrypt_la-ath.obj: ath.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-ath.obj -MD -MP -MF "$(DEPDIR)/libgcrypt_la-ath.Tpo" \
	  -c -o libgcrypt_la-ath.obj `if test -f 'ath.c'; then $(CYGPATH_W) 'ath.c'; else $(CYGPATH_W) '$(srcdir)/ath.c'; fi`; \
	then mv -f "$(DEPDIR)/libgcrypt_la-ath.Tpo" "$(DEPDIR)/libgcrypt_la-ath.Po"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-ath.Tpo"; exit 1; \
	fi
#	source='ath.c' object='libgcrypt_la-ath.obj' libtool=no \
#	depfile='$(DEPDIR)/libgcrypt_la-ath.Po' tmpdepfile='$(DEPDIR)/libgcrypt_la-ath.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-ath.obj `if test -f 'ath.c'; then $(CYGPATH_W) 'ath.c'; else $(CYGPATH_W) '$(srcdir)/ath.c'; fi`

libgcrypt_la-ath.lo: ath.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -MT libgcrypt_la-ath.lo -MD -MP -MF "$(DEPDIR)/libgcrypt_la-ath.Tpo" \
	  -c -o libgcrypt_la-ath.lo `test -f 'ath.c' || echo '$(srcdir)/'`ath.c; \
	then mv -f "$(DEPDIR)/libgcrypt_la-ath.Tpo" "$(DEPDIR)/libgcrypt_la-ath.Plo"; \
	else rm -f "$(DEPDIR)/libgcrypt_la-ath.Tpo"; exit 1; \
	fi
#	source='ath.c' object='libgcrypt_la-ath.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgcrypt_la-ath.Plo' tmpdepfile='$(DEPDIR)/libgcrypt_la-ath.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcrypt_la_CFLAGS) $(CFLAGS) -c -o libgcrypt_la-ath.lo `test -f 'ath.c' || echo '$(srcdir)/'`ath.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
m4dataDATA_INSTALL = $(INSTALL_DATA)
install-m4dataDATA: $(m4data_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(m4datadir)
	@list='$(m4data_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(m4dataDATA_INSTALL) $$d$$p $(DESTDIR)$(m4datadir)/$$f"; \
	  $(m4dataDATA_INSTALL) $$d$$p $(DESTDIR)$(m4datadir)/$$f; \
	done

uninstall-m4dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(m4data_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(m4datadir)/$$f"; \
	  rm -f $(DESTDIR)$(m4datadir)/$$f; \
	done
includeHEADERS_INSTALL = $(INSTALL_HEADER)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f"; \
	  $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(includedir)/$$f"; \
	  rm -f $(DESTDIR)$(includedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(SCRIPTS) $(DATA) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) $(DESTDIR)$(m4datadir) $(DESTDIR)$(includedir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS install-m4dataDATA

install-exec-am: install-binSCRIPTS install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binSCRIPTS uninstall-includeHEADERS \
	uninstall-info-am uninstall-libLTLIBRARIES uninstall-m4dataDATA

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binSCRIPTS install-data install-data-am \
	install-exec install-exec-am install-includeHEADERS \
	install-info install-info-am install-libLTLIBRARIES \
	install-m4dataDATA install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binSCRIPTS \
	uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-m4dataDATA

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
